### Resumen de "Introducción a las Views"

*   **Conceptos Fundamentales:**
    *   **View:** Es el bloque de construcción básico para todos los componentes de la interfaz de usuario en Android. Cada `View` ocupa un área rectangular en la pantalla y es responsable de dibujar y manejar eventos. Ejemplos: `TextView`, `Button`, `ImageView`.
    *   **ViewGroup:** Es una `View` especial que puede contener otras `View` (y `ViewGroup`), permitiendo organizar y anidar componentes. Actúa como un contenedor para definir la estructura del layout. Ejemplos: `LinearLayout`, `ConstraintLayout`.
    *   **Jerarquía de Vistas:** Las `View` se organizan en una estructura de árbol. Un `ViewGroup` es un nodo que tiene hijos (otras `View` o `ViewGroup`), y una `View` es una hoja.

*   **Definición de la Interfaz:**
    *   La forma recomendada de definir la interfaz de usuario es a través de **archivos XML de layout**, ubicados en el directorio `res/layout/`.
    *   Esto separa la presentación de la lógica de la aplicación, facilitando el mantenimiento.

*   **Atributos Comunes de las Vistas (en XML):**
    *   `android:id`: Asigna un identificador único a una `View` para poder referenciarla desde el código.
    *   `android:layout_width` y `android:layout_height`: Definen el ancho y alto de la `View`. Valores comunes son `wrap_content` (se ajusta al contenido) y `match_parent` (ocupa todo el espacio del padre).
    *   `android:text`: Establece el texto para `View` como `TextView` o `Button`.
    *   `android:src`: Especifica la fuente de una imagen para un `ImageView`.
    *   `android:padding`: Define un espacio interno entre el borde de la `View` y su contenido.
    *   `android:margin`: Define un espacio externo alrededor de la `View`, separándola de otros elementos.
    *   `android:background`: Establece un color o drawable de fondo.

*   **Acceso a las Vistas desde el Código (Kotlin):**
    *   En una `Activity`, después de inflar el layout con `setContentView()`, se puede obtener una referencia a una `View` específica usando el método `findViewById()`.
    *   Una vez obtenida la referencia, se puede interactuar con la `View` para leer o modificar sus propiedades (ej. cambiar un texto, asignar un listener de clic).

*   **Unidades de Medida:**
    *   **dp (Density-independent Pixels):** Unidad abstracta basada en la densidad física de la pantalla. Es la unidad recomendada para especificar las dimensiones de las `View` para que se vean de manera consistente en diferentes densidades de pantalla.
    *   **sp (Scale-independent Pixels):** Similar a `dp`, pero también se escala según la preferencia de tamaño de fuente del usuario. Es la unidad recomendada para el tamaño del texto.