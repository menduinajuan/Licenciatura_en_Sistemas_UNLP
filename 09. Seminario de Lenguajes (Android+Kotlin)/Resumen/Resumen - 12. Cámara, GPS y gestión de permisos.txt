### Resumen de "Cámara, GPS y gestión de permisos"

*   **Gestión de Permisos en Android:**
    *   **Concepto:** Para acceder a datos sensibles (como la ubicación, contactos, cámara) o a ciertas funcionalidades del sistema, una aplicación debe solicitar los permisos correspondientes al usuario.
    *   **Proceso de 2 Pasos:**
        1.  **Declaración en el Manifest:** Se debe declarar el permiso en el archivo `AndroidManifest.xml` usando la etiqueta `<uses-permission>`. (Ej: `<uses-permission android:name="android.permission.ACCESS_FINE_LOCATION" />`).
        2.  **Solicitud en Tiempo de Ejecución (Runtime):** A partir de Android 6.0 (API 23), no basta con declarar el permiso. Se debe solicitar explícitamente al usuario mientras la app está en uso. El usuario puede conceder o denegar el permiso.
    *   **Flujo de Solicitud en el Código:**
        *   `ContextCompat.checkSelfPermission()`: Se usa para verificar si el permiso ya ha sido concedido.
        *   `ActivityCompat.requestPermissions()`: Si el permiso no ha sido concedido, se usa este método para mostrar el diálogo de solicitud al usuario.
        *   `onRequestPermissionsResult()`: Se sobrescribe este método en la `Activity` para recibir la respuesta del usuario (concedido o denegado) y actuar en consecuencia.

*   **Acceso a la Cámara:**
    *   **Método 1: Intent Implícito (Recomendado para casos simples):**
        *   Se puede delegar la tarea de tomar una foto a cualquier aplicación de cámara instalada en el dispositivo.
        *   Se utiliza un `Intent` con la acción `MediaStore.ACTION_IMAGE_CAPTURE`. Esto **no requiere solicitar el permiso de cámara** explícitamente en el Manifest.
        *   Para recibir la foto tomada, se debe lanzar el `Intent` usando `ActivityResultLauncher` y procesar el resultado (la imagen en formato Bitmap) en el callback.
    *   **Filtrado en Google Play:** Se puede usar la etiqueta `<uses-feature>` en el Manifest para indicar si la cámara es un requisito (`android:required="true"`) o no para la instalación de la app.

*   **Acceso a la Ubicación (GPS):**
    *   **Permisos:** Es un dato sensible y siempre requiere permisos.
        *   `ACCESS_COARSE_LOCATION`: Para obtener una ubicación aproximada (a nivel de ciudad).
        *   `ACCESS_FINE_LOCATION`: Para obtener la ubicación precisa del GPS.
    *   **Google Play Services:** La forma **recomendada** de obtener la ubicación es usando las APIs de localización de los Servicios de Google Play, ya que son más precisas, eficientes en el consumo de batería y fáciles de usar.
    *   **Implementación con Google Play Services:**
        1.  Añadir la dependencia `play-services-location` en el archivo `build.gradle`.
        2.  Declarar los permisos de ubicación en el `AndroidManifest.xml`.
        3.  Solicitar los permisos al usuario en tiempo de ejecución.
        4.  Utilizar la clase `FusedLocationProviderClient` para obtener la última ubicación conocida (`lastLocation`) o para solicitar actualizaciones periódicas (`requestLocationUpdates`).
        5.  `LocationRequest`: Se usa para configurar la frecuencia y precisión de las actualizaciones de ubicación.
        6.  `LocationCallback`: Se crea un callback para recibir las nuevas ubicaciones cuando se solicitan actualizaciones en tiempo real.